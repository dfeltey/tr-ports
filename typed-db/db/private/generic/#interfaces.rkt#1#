#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.90.0.10 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 1497 0 28 3 17 #"#lang racket/base"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 12 #"racket/class"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 16 #"racket/serialize"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 14 #"unstable/error"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 13 #"connection<%>"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"dbsystem<%>"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 21 #"prepared-statement<%>"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"connection?"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 9 #"dbsystem?"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 19 #"prepared-statement?"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"struct-out"
0 0 24 3 1 #" "
0 0 14 3 8 #"statemen"
0 0 14 3 1 #"t"
0 0 14 3 3 #"-bi"
0 0 14 3 1 #"n"
0 0 14 3 4 #"ding"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"struct-out"
0 0 24 3 1 #" "
0 0 14 3 13 #"simple-result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"struct-out"
0 0 24 3 1 #" "
0 0 14 3 11 #"rows-result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"struct-out"
0 0 24 3 1 #" "
0 0 14 3 13 #"cursor-result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"init-private"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"log-db-error"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 14 #"log-db-warning"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"log-db-info"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"log-db-debug"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"struct-out"
0 0 24 3 1 #" "
0 0 14 3 12 #"exn:fail:sql"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"raise-sql-error"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; ----------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; Interfaces"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; connection<%>"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"connection<%>"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"interface"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 70
(
 #";; connected? method must return promptly (eg, without acquiring loc"
 #"k)"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 10 #"connected?"
0 0 24 3 4 #"    "
0 0 17 3 13 #";; -> boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 10 #"disconnect"
0 0 24 3 4 #"    "
0 0 17 3 10 #";; -> void"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 12 #"get-dbsystem"
0 0 24 3 2 #"  "
0 0 17 3 17 #";; -> dbsystem<%>"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 5 #"query"
0 0 24 3 9 #"         "
0 0 17 3 34 #";; symbol statement -> QueryResult"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 7 #"prepare"
0 0 24 3 7 #"       "
0 0 17 3 53 #";; symbol preparable boolean -> prepared-statement<%>"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 12 #"fetch/cursor"
0 0 24 3 2 #"  "
0 0 17 3 45 #";; symbol cursor nat -> #f or (listof vector)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 8 #"get-base"
0 0 24 3 6 #"      "
0 0 17 3 53 #";; -> connection<%> or #f (#f means base isn't fixed)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 6 #"list-t"
0 0 14 3 1 #"a"
0 0 14 3 4 #"bles"
0 0 24 3 3 #"   "
0 0 17 3 35 #";; symbol symbol -> (listof string)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 70
(
 #";; in start-tx and end-tx, the final boolean arg indicates whether t"
 #"he"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 63
#";; transaction is managed manually (#f) or by call-with-tx (#t)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 17 #"start-transaction"
0 0 24 3 2 #"  "
0 0 17 3 51 #";; symbol (U 'serializable ...) any boolean -> void"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 15 #"end-transaction"
0 0 24 3 4 #"    "
0 0 17 3 47 #";; symbol (U 'commit 'rollback) boolean -> void"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 18 #"transaction-status"
0 0 24 3 1 #" "
0 0 17 3 33 #";; symbol -> (U boolean 'invalid)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 14 #"free-statement"
0 0 24 3 5 #"))   "
0 0 17 3 40 #";; prepared-statement<%> boolean -> void"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; dbsystem<%>"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; Represents brand of database system, SQL dialect, etc"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"dbsystem<%>"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"interface"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 14 #"get-short-name"
0 0 24 3 9 #"         "
0 0 17 3 12 #";; -> symbol"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 22 #"get-parameter-handlers"
0 0 24 3 1 #" "
0 0 17 3 47 #";; (listof typeid) -> (listof ParameterHandler)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 20 #"field-dvecs->typeids"
0 0 24 3 3 #"   "
0 0 17 3 41 #";; (listof field-dvec) -> (listof typeid)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 18 #";; inspection only"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 15 #"get-known-types"
0 0 24 3 8 #"        "
0 0 17 3 26 #";; real -> (listof symbol)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 15 #"describe-params"
0 0 24 3 8 #"        "
0 0 17 3 39 #";; (listof typeid) -> (listof TypeDesc)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 15 #"describe-fields"
0 0 24 3 8 #"))      "
0 0 17 3 43 #";; (listof field-dvec) -> (listof TypeDesc)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; ParameterHandler = (fsym index datum -> ???)"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; Each system gets to choose its checked-param representation."
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; Maybe check and convert to string. Maybe just check, do binary co"
 #"nversion later."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; TypeDesc = (list boolean symbol/#f typeid)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; prepared-statement<%>"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"prepared-statement<%>"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"interface"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 10 #"get-handle"
0 0 24 3 9 #"         "
0 0 17 3 41 #";; -> Handle (depends on database system)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 10 #"set-handle"
0 0 24 3 9 #"         "
0 0 17 3 17 #";; Handle -> void"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 18 #"get-close-on-exec?"
0 0 24 3 1 #" "
0 0 17 3 13 #";; -> boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 10 #"after-exec"
0 0 24 3 9 #"         "
0 0 17 3 38 #";; boolean -> void (for close-on-exec)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 8 #"get-stmt"
0 0 24 3 11 #"           "
0 0 17 3 15 #";; -> string/#f"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 13 #"get-stmt-type"
0 0 24 3 6 #"      "
0 0 17 3 15 #";; -> symbol/#f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 15 #"get-param-count"
0 0 24 3 4 #"    "
0 0 17 3 9 #";; -> nat"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 17 #"get-param-typeids"
0 0 24 3 2 #"  "
0 0 17 3 21 #";; -> (listof typeid)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 16 #"get-result-dvecs"
0 0 24 3 3 #"   "
0 0 17 3 25 #";; -> (listof field-dvec)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 16 #"get-result-count"
0 0 24 3 3 #"   "
0 0 17 3 9 #";; -> nat"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 18 #"get-result-typeids"
0 0 24 3 1 #" "
0 0 17 3 21 #";; -> (listof typeid)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 11 #"check-owner"
0 0 24 3 8 #"        "
0 0 17 3 41 #";; symbol connection any -> #t (or error)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 4 #"bind"
0 0 24 3 15 #"               "
0 0 17 3 45 #";; symbol (listof param) -> statement-binding"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 18 #";; inspection only"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 15 #"get-param-types"
0 0 24 3 4 #"    "
0 0 17 3 23 #";; -> (listof TypeDesc)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 16 #"get-result-types"
0 0 24 3 3 #"   "
0 0 17 3 23 #";; -> (listof TypeDesc)"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"connection?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 13 #"connection<%>"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"dbsystem?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 11 #"dbsystem<%>"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"prepared-statement?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 21 #"prepared-statement<%>"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; ----------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Auxiliary structures"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; A statement-binding is:"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;   - (statement-binding prepared-statement (listof ???))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 17 #"statement-binding"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pst"
0 0 24 3 1 #" "
0 0 14 3 6 #"params"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; An query-result is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;  - (simple-result alist)"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;  - (rows-result Header data)"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";;    for user-visible rows-results: headers present, data is (listo"
 #"f vector)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 19 #"serializable-struct"
0 0 24 3 1 #" "
0 0 14 3 13 #"simple-result"
0 0 24 3 2 #" ("
0 0 14 3 4 #"info"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 19 #"serializable-struct"
0 0 24 3 1 #" "
0 0 14 3 11 #"rows-result"
0 0 24 3 2 #" ("
0 0 14 3 7 #"headers"
0 0 24 3 1 #" "
0 0 14 3 4 #"rows"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; A cursor-result is"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;  - (cursor-result Header prepared-statement ???)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 13 #"cursor-result"
0 0 24 3 2 #" ("
0 0 14 3 7 #"headers"
0 0 24 3 1 #" "
0 0 14 3 3 #"pst"
0 0 24 3 1 #" "
0 0 14 3 5 #"extra"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; A Header is (listof FieldInfo)"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; A FieldInfo is an alist, contents dbsys-dependent"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; ----------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Class utilities"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; Here just because ..."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 24 3 2 #" ("
0 0 14 3 12 #"init-private"
0 0 24 3 1 #" "
0 0 14 3 3 #"iid"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 13 #"init-private1"
0 0 24 3 1 #" "
0 0 14 3 3 #"iid"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 24 3 2 #" ("
0 0 14 3 13 #"init-private1"
0 0 24 3 1 #" "
0 0 14 3 3 #"iid"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 4 #"init"
0 0 24 3 3 #" (["
0 0 14 3 11 #"private-iid"
0 0 24 3 1 #" "
0 0 14 3 3 #"iid"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"iid"
0 0 24 3 1 #" "
0 0 14 3 11 #"private-iid"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; ----------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Logging"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 5 #"defin"
0 0 15 3 1 #"e"
0 0 15 3 1 #"-"
0 0 15 3 6 #"logger"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; ----------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; Exceptions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 58
#"Only errors with an associated SQLSTATE are represented by"
0 0 17 29 1 #"\n"
0 0 17 3 66
#"exn:fail:sql, specifically only errors originating from a database"
0 0 17 29 1 #"\n"
0 0 17 3 68
#"backend or library. Other errors are typically raised using 'error',"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"producing plain old exn:fail."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"For SQLite, use symbol instead of SQLSTATE string."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; exn:fail:sql"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; Represents an error with an associated SQLSTATE"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 12 #"exn:fail:sql"
0 0 24 3 1 #" "
0 0 14 3 8 #"exn:fail"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sqlstate"
0 0 24 3 1 #" "
0 0 14 3 4 #"info"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; raise-sql-error : symbol string string alist -> raises exn"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"raise-sql-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 8 #"sqlstate"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 14 3 4 #"info"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"raise"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 17 #"make-exn:fail:sql"
0 0 24 3 2 #" ("
0 0 14 3 21 #"compose-error-message"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 10 #"\"SQLSTATE\""
0 0 24 3 1 #" "
0 0 14 3 8 #"sqlstate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 26 #"current-continuation-marks"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 8 #"sqlstate"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 4 #"info"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; ----------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; Common Errors"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 14 #"error/internal"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"error/internal*"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 19 #"error/not-connected"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 16 #"error/no-support"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 19 #"error/need-password"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 10 #"error/comm"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 14 #"error/hopeless"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 22 #"error/unsupported-type"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 16 #"error/no-convert"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 30 #"error/invalid-nested-isolation"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 17 #"error/tx-bad-stmt"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 19 #"error/unbalanced-tx"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 17 #"error/unclosed-tx"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 22 #"error/nested-tx-option"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 21 #"error/exn-in-rollback"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 16 #"error/stmt-arity"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 10 #"error/stmt"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"error/want-rows"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 17 #"error/want-cursor"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 18 #"error/column-count"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"error/row-count"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 28 #"error/statement-binding-args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"error/internal"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"fmt"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"internal error"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 23 3 11 #"#:continued"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 14 3 3 #"fmt"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"error/internal*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"internal error\""
0 0 24 3 1 #" "
0 0 23 3 11 #"#:continued"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; FIXME; clean up"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"error/comm"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 2 #" ["
0 0 14 3 13 #"when-occurred"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"communication failure\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 6 #"\"when\""
0 0 24 3 1 #" "
0 0 14 3 13 #"when-occurred"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"error/no-support"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 7 #"feature"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"feature not supported\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 9 #"\"feature\""
0 0 24 3 1 #" "
0 0 14 3 7 #"feature"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"error/hopeless"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 61
#"\"connection is permanently locked due to a terminated thread\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"error/not-connected"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"not connected\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; ----"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 30 #"error/invalid-nested-isolation"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 9 #"isolation"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 48 #"\"invalid isolation level for nested transaction\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 17 #"\"isolation level\""
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 2 #") "
0 0 14 3 9 #"isolation"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"error/unbalanced-tx"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 14 3 10 #"saved-cwt?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 53 #"\"~a-transaction without matching start-transaction~a\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 4 #"mode"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 10 #"saved-cwt?"
0 0 24 3 1 #" "
0 0 19 3 47 #"\" (within the extent of call-with-transaction)\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"error/unclosed-tx"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 14 3 10 #"saved-cwt?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 31 #"\"unclosed nested transaction~a\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 10 #"saved-cwt?"
0 0 24 3 1 #" "
0 0 19 3 43 #"\" (within extent of call-with-transaction)\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"error/tx-bad-stmt"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 16 #"stmt-type-string"
0 0 24 3 1 #" "
0 0 14 3 8 #"tx-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 52 #"\"statement not allowed in current transaction state\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 16 #"\"statement type\""
0 0 24 3 1 #" "
0 0 14 3 16 #"stmt-type-string"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 19 #"\"transaction state\""
0 0 24 3 1 #" "
0 0 14 3 8 #"tx-state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"error/nested-tx-option"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 6 #"option"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 43 #"\"option not allowed for nested transaction\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 8 #"\"option\""
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 2 #") "
0 0 14 3 6 #"option"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"error/exn-in-rollback"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"error during rollback\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 23 3 11 #"#:continued"
0 0 24 3 1 #" "
0 0 19 3 69
(
 #"\"secondary error occurred during rollback triggered by primary erro"
 #"r\""
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 9 #"\"primary\""
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 3 #") ("
0 0 14 3 11 #"exn-message"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 11 #"\"secondary\""
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 3 #") ("
0 0 14 3 11 #"exn-message"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; ----"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"error/stmt-arity"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 38 #"\"wrong number of parameters for query\""
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 34 #";; FIXME: add stmt, use error/stmt"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 10 #"\"expected\""
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 7 #"\"given\""
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; ----"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"error/need-password"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 34 #"\"password needed but not supplied\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; ----"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"error/unsupported-type"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 6 #"typeid"
0 0 24 3 2 #" ["
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"unsupported type\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 6 #"\"type\""
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 8 #"\"typeid\""
0 0 24 3 1 #" "
0 0 14 3 6 #"typeid"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"error/no-convert"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"sys"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 5 #"param"
0 0 24 3 2 #" ["
0 0 14 3 4 #"note"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"] "
0 0 23 3 10 #"#:contract"
0 0 24 3 2 #" ["
0 0 14 3 3 #"ctc"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 19 3 40 #"\"cannot convert given value to SQL type\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 7 #"\"given\""
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 2 #") "
0 0 14 3 5 #"param"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 6 #"\"type\""
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 10 #"\"expected\""
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"ctc"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~.s\""
0 0 24 3 1 #" "
0 0 14 3 3 #"ctc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 9 #"\"dialect\""
0 0 24 3 1 #" "
0 0 14 3 3 #"sys"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 6 #"\"note\""
0 0 24 3 1 #" "
0 0 14 3 4 #"note"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; ----"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"error/stmt"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 11 #"\"statement\""
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 3 #") ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 4 #"stmt"
0 0 24 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 24 3 2 #") "
0 0 14 3 4 #"stmt"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 18 #"statement-binding?"
0 0 24 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 24 3 3 #") ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 21 #"statement-binding-pst"
0 0 24 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 19 #"prepared-statement?"
0 0 24 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 24 3 3 #") ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-stmt"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 4 #"stmt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 55 #";; FIXME: include params from statement-binding values?"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 58
#";; must first change statement-binding to store raw params"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 4 #"args"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"error/want-rows"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"sql"
0 0 24 3 1 #" "
0 0 14 3 9 #"executed?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"error/stmt"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"sql"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"executed?"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 27 #"\"query did not return rows\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 28 #"\"query does not return rows\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"error/want-cursor"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"sql"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"error/stmt"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"sql"
0 0 24 3 1 #" "
0 0 19 3 29 #"\"query did not return cursor\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"error/column-count"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"sql"
0 0 24 3 1 #" "
0 0 14 3 12 #"want-columns"
0 0 24 3 1 #" "
0 0 14 3 11 #"got-columns"
0 0 24 3 1 #" "
0 0 14 3 9 #"executed?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"error/stmt"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"sql"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"executed?"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 40 #"\"query returned wrong number of columns\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 39 #"\"query returns wrong number of columns\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 10 #"\"expected\""
0 0 24 3 1 #" "
0 0 14 3 12 #"want-columns"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 5 #"\"got\""
0 0 24 3 1 #" "
0 0 14 3 11 #"got-columns"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"error/row-count"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"sql"
0 0 24 3 1 #" "
0 0 14 3 9 #"want-rows"
0 0 24 3 1 #" "
0 0 14 3 8 #"got-rows"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"error/stmt"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 3 #"sql"
0 0 24 3 1 #" "
0 0 19 3 37 #"\"query returned wrong number of rows\""
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 10 #"\"expected\""
0 0 24 3 1 #" "
0 0 14 3 9 #"want-rows"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 5 #"\"got\""
0 0 24 3 1 #" "
0 0 14 3 8 #"got-rows"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"error/statement-binding-args"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"error*"
0 0 24 3 1 #" "
0 0 14 3 4 #"fsym"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 19 3 67
(
 #"\"cannot execute statement-binding"
 #" with additional inline arguments\""
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 11 #"\"statement\""
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 2 #") "
0 0 14 3 4 #"stmt"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 11 #"\"arguments\""
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 2 #") "
0 0 14 3 4 #"args"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0           0
